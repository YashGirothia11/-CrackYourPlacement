Given a number K and string str of digits denoting a positive integer, build the largest number possible by performing swap operations on the digits of str at most K times.


Example 1:
Input:
K = 4
str = "1234567"
Output:
7654321
Explanation:
Three swaps can make the
input 1234567 to 7654321, swapping 1
with 7, 2 with 6 and finally 3 with 5

Example 2:
Input:
K = 3
str = "3435335"
Output:
5543333
Explanation:
Three swaps can make the input
3435335 to 5543333, swapping 3 
with 5, 4 with 5 and finally 3 with 4 

======================================================================================================================================================================================

# ode of the above question 

#include <bits/stdc++.h>
using namespace std;
void findMaximumNum(
    string str, int k, string& max)
{
    if (k == 0)
        return;
    int n = str.length();
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (str[i] < str[j]) {
                swap(str[i], str[j]);
                if (str.compare(max) > 0)
                    max = str;
                findMaximumNum(str, k - 1, max);
                swap(str[i], str[j]);
            }
        }
    }
}
int main()
{
    string str = "129814999";
    int k = 4;
    string max = str;
    findMaximumNum(str, k, max);
    cout << max << endl;
    return 0;
}
