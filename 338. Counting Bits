Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.


Example 1:
Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10

Example 2:
Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101

Constraints:
0 <= n <= 105

=======================================================================================================================================================================

# Code of the above question  

class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> result(n + 1, 0);
        if (n == 0) {
            return result;
        }
        result[0] = 0;
        if (n >= 1) {
            result[1] = 1;
        }
        for (int x = 2; x <= n; ++x) {
            if (x % 2 == 0) {
                result[x] = result[x / 2];
            }
            else {
                result[x] = result[x / 2] + 1;
            }
        }
        return result;
    }
};
